---
globs: *.ts
description: TypeScript standards and conventions for XHS MCP
---
# TypeScript Standards for XHS MCP

**This project is TypeScript-first** — prioritize type safety and consistency.

## Code Style & Standards

- Always use semicolons
- Enable strict TypeScript and prefer explicit return types for functions
- Avoid `any` — prefer `unknown` or concrete types
- Target ES2022 features, use ES modules
- Prefer interfaces over type aliases for object shapes
- Use generics for reusable types

## Import/Export Patterns

```typescript
// Use .js extensions for compiled output imports when importing built files
// Prefer named exports over default exports
```

## Error Handling

- Use custom error classes; include operation context
- Handle async operations with try/catch; avoid swallowing errors

## Service Architecture

- Use `ConfigManager.getInstance()` for config singletons
- Prefer dependency injection via constructors
- Async service methods for IO work
- Use `XHSResponse<T>` for consistent responses

## Type Definitions

- Centralize shared types in [src/shared/types.ts](mdc:src/shared/types.ts)
- Interface names are PascalCase (e.g., `XHSResponse`, `BrowserConfig`)
- Use `?` for optionals; avoid `undefined` in unions

